name: clx

x-notebook-processor-base: &notebook-processor-base
    build:
        context: ./notebook-processor
    depends_on:
        nats-init:
            condition: service_completed_successfully
    volumes:
        - type: volume
          bind:
              create_host_path: true
          source: clx-data
          target: /slides
          read_only: true
          volume:
              nocopy: true
              subpath: courses/python/slides
        - type: volume
          bind:
              create_host_path: true
          source: clx-data
          target: /staging
          read_only: false
          volume:
              nocopy: true
              subpath: courses/python/staging
#        - C:\Users\tc\Programming\Python\Courses\Own\PythonCoursesNew\slides:/slides:ro
#        - C:\Users\tc\Programming\Python\Courses\Own\PythonCoursesNew\staging:/staging:rw
    networks:
        - app-network
    develop:
        watch:
            -   action: sync+restart
                path: ./notebook-processor
                target: /app
            -   action: rebuild
                path: ./notebook-processor/requirements.txt


services:
    vscode:
        build: ./vscode-server
        container_name: vscode
        user: 1000:1000
        ports:
            - "8080:8080"
        volumes:
            - clx-data:/home/coder:rw
        environment:
            PASSWORD: vscode

    jupyter:
        image: jupyter/base-notebook:latest
        container_name: jupyter
        user: 1000:1000
        ports:
            - "8888:8888"
        volumes:
            - clx-data:/home/jovyan:rw
        environment:
            JUPYTER_ENABLE_LAB: "yes"
        command: "start-notebook.sh --NotebookApp.token='' --NotebookApp.password='' --ip=0.0.0.0"

    html-server:
        image: pierrezemb/gostatic:latest
        container_name: html-server
        user : 1000:1000
        ports:
            - "8000:8043"  # Expose gostatic's default port 8043 on host port 8000
        volumes:
            - type: volume
              source: clx-data
              target: /srv/http
              read_only: false
              volume:
                  nocopy: true
        command: "gostatic -l -s /srv/http -d /srv/http -p 8043"



    nats:
        image: nats:latest
        ports:
            - "4222:4222"
            - "6222:6222"
            - "8222:8222"
        command: "-c /etc/nats/nats-server.conf"
        volumes:
            - ./nats-server.conf:/etc/nats/nats-server.conf
        networks:
            - app-network

    nats-init:
        build: ./nats-init
        depends_on:
            nats:
                condition: service_started
        environment:
            - NATS_URL=nats://nats:4222
        networks:
            - app-network
        develop:
            watch:
                -   action: sync+restart
                    path: ./nats-init
                    target: /app
                -   action: rebuild
                    path: ./nats-init/requirements.txt

    nats-log:
        build: ./nats-log
        environment:
            - NATS_URL=nats://nats:4222
        networks:
            - app-network
        profiles:
            - debug
        develop:
            watch:
                -   action: sync+restart
                    path: ./nats-log
                    target: /app
                -   action: rebuild
                    path: ./nats-log/requirements.txt

    file-watcher:
        build:
            context: file-watcher
        depends_on:
            nats-init:
                condition: service_completed_successfully
        environment:
            - NATS_URL=nats://nats:4222
            - LOG_LEVEL=INFO
            - CONFIG_PATH=/app/config.yaml
            - DB_PATH=/clx-db/watched_files.db
        volumes:
            - type: volume
              source: clx-data
              target: /slides
              read_only: true
              volume:
                  nocopy: true
                  subpath: courses/python/slides
            - type: volume
              source: clx-data
              target: /staging
              read_only: true
              volume:
                  nocopy: true
                  subpath: courses/python/staging
#            - C:\Users\tc\Programming\Python\Courses\Own\PythonCoursesNew\slides:/slides:ro
#            - C:\Users\tc\Programming\Python\Courses\Own\PythonCoursesNew\staging:/staging:ro
            - ./file-watcher/config.yaml:/app/config.yaml
            - clx-db:/clx-db
        networks:
            - app-network
        develop:
            watch:
                -   action: sync+restart
                    path: ./file-watcher
                    target: /app
                -   action: rebuild
                    path: ./file-watcher/requirements.txt

    drawio-converter:
        build:
            context: ./drawio-converter
        depends_on:
            nats-init:
                condition: service_completed_successfully
        environment:
            - NATS_URL=nats://nats:4222
            - LOG_LEVEL=INFO
            - CONFIG_PATH=/app/config.yaml
            - DISPLAY=:99
        volumes:
            - type: volume
              source: clx-data
              target: /slides
              read_only: false
              volume:
                  nocopy: true
                  subpath: courses/python/slides
#            - C:\Users\tc\Programming\Python\Courses\Own\PythonCoursesNew\slides:/slides:rw
            - ./drawio-converter/config.yaml:/app/config.yaml:ro
        networks:
            - app-network
        init: true
        healthcheck:
            test: [ "CMD", "bash", "-c", "xdpyinfo -display :99 >/dev/null 2>&1" ]
            interval: 10s
            timeout: 5s
            retries: 3
        develop:
            watch:
                -   action: sync+restart
                    path: ./drawio-converter
                    target: /app
                -   action: rebuild
                    path: ./drawio-converter/requirements.txt
        deploy:
            mode: replicated
            replicas: 1

    plantuml-converter:
        build:
            context: ./plantuml-converter
        depends_on:
            nats-init:
                condition: service_completed_successfully
        environment:
            - NATS_URL=nats://nats:4222
            - LOG_LEVEL=INFO
            - CONFIG_PATH=/app/config.yaml
        volumes:
            - type: volume
              source: clx-data
              target: /slides
              read_only: false
              volume:
                  nocopy: true
                  subpath: courses/python/slides
#            - C:\Users\tc\Programming\Python\Courses\Own\PythonCoursesNew\slides:/slides:rw
            - ./plantuml-converter/config.yaml:/app/config.yaml:ro
        networks:
            - app-network
        develop:
            watch:
                -   action: sync+restart
                    path: ./plantuml-converter
                    target: /app
                -   action: rebuild
                    path: ./plantuml-converter/requirements.txt
        deploy:
            mode: replicated
            replicas: 1

    staging-copier:
        build:
            context: ./staging-copier
        depends_on:
            nats-init:
                condition: service_completed_successfully
        environment:
            - NATS_URL=nats://nats:4222
            - LOG_LEVEL=INFO
            - INPUT_DIR=/input
            - OUTPUT_DIR=/staging
            - STREAM_NAME=EVENTS
            - SUBJECT=event.file.*.staging
            - NOTEBOOK_EXTENSION=.py
            - PROG_LANG=python
            - QUEUE_GROUP=STAGING_COPIER_QUEUE
            - LANGUAGES=de,en
            - NOTEBOOK_FORMATS=notebook,code,html
            - OUTPUT_TYPES=completed,codealong,speaker
        volumes:
            - type: volume
              source: clx-data
              target: /slides
              read_only: true
              volume:
                  nocopy: true
                  subpath: courses/python/slides
            - type: volume
              source: clx-data
              target: /staging
              read_only: false
              volume:
                  nocopy: true
                  subpath: courses/python/staging
#            - C:\Users\tc\Programming\Python\Courses\Own\PythonCoursesNew\slides:/slides:ro
#            - C:\Users\tc\Programming\Python\Courses\Own\PythonCoursesNew\staging:/staging:rw
        networks:
            - app-network
        develop:
            watch:
                -   action: sync+restart
                    path: ./staging-copier
                    target: /app
                -   action: rebuild
                    path: ./staging-copier/requirements.txt

    output-copier:
        build:
            context: ./output-copier
        depends_on:
            nats-init:
                condition: service_completed_successfully
        environment:
            - SPEC_DIR=/course-specs
            - STAGING_DIR=/staging
            - OUTPUT_DIR=/output
            - REGEN_COOLDOWN=5
            - NATS_URL=nats://nats:4222
            - LOG_LEVEL=DEBUG
            - STREAM_NAME=EVENTS
            - FILE_SUBJECT=event.file.*.output
            - COMMAND_SUBJECT=command.output.>
            - FILE_QUEUE_GROUP=OUTPUT_COPIER_FILE_QUEUE
            - COMMAND_QUEUE_GROUP=OUTPUT_COPIER_COMMAND_QUEUE
            - LANGUAGES=de,en
        volumes:
            - type: volume
              source: clx-data
              target: /course-specs
              read_only: true
              volume:
                  nocopy: true
                  subpath: courses/python/course-specs
            - type: volume
              source: clx-data
              target: /staging
              read_only: true
              volume:
                  nocopy: true
                  subpath: courses/python/staging
            - type: volume
              source: clx-data
              target: /output
              read_only: false
              volume:
                  nocopy: true
                  subpath: courses/python/output
#            - C:\Users\tc\Programming\Python\Courses\Own\PythonCoursesNew\course-specs:/course-specs:ro
#            - C:\Users\tc\Programming\Python\Courses\Own\PythonCoursesNew\staging:/staging:ro
#            - C:\Users\tc\Programming\Python\Courses\Own\PythonCoursesNew\output-test:/output:rw
        networks:
            - app-network
        develop:
            watch:
                -   action: sync+restart
                    path: ./output-copier
                    target: /app
                -   action: rebuild
                    path: ./output-copier/requirements.txt

    nb-notebook:
        <<: *notebook-processor-base
        environment:
            - NATS_URL=nats://nats:4222
            - LOG_LEVEL=INFO
            - INPUT_DIR=/input
            - OUTPUT_DIR=/staging
            - STREAM_NAME=EVENTS
            - SUBJECT=event.file.*.notebooks
            - NOTEBOOK_EXTENSION=.py
            - PROG_LANG=python
            - QUEUE_GROUP=NOTEBOOK_PROCESSOR_NB
            - LANGUAGES=de,en
            - NOTEBOOK_FORMATS=notebook
            - OUTPUT_TYPES=completed,codealong,speaker
        deploy:
            mode: replicated
            replicas: 1

    nb-code:
        <<: *notebook-processor-base
        environment:
            - NATS_URL=nats://nats:4222
            - LOG_LEVEL=INFO
            - INPUT_DIR=/input
            - OUTPUT_DIR=/staging
            - STREAM_NAME=EVENTS
            - SUBJECT=event.file.*.notebooks
            - NOTEBOOK_EXTENSION=.py
            - PROG_LANG=python
            - QUEUE_GROUP=NOTEBOOK_PROCESSOR_BASE
            - LANGUAGES=de,en
            - NOTEBOOK_FORMATS=code
            - OUTPUT_TYPES=completed,codealong
        deploy:
            mode: replicated
            replicas: 1

    nb-html-de-completed:
        <<: *notebook-processor-base
        environment:
            - NATS_URL=nats://nats:4222
            - LOG_LEVEL=INFO
            - INPUT_DIR=/input
            - OUTPUT_DIR=/staging
            - STREAM_NAME=EVENTS
            - SUBJECT=event.file.*.notebooks
            - NOTEBOOK_EXTENSION=.py
            - PROG_LANG=python
            - QUEUE_GROUP=NOTEBOOK_PROCESSOR_HTML_DE_COMPLETED
            - LANGUAGES=de
            - NOTEBOOK_FORMATS=html
            - OUTPUT_TYPES=completed
        deploy:
            mode: replicated
            replicas: 1
            resources:
                reservations:
                    devices:
                        -   driver: nvidia
                            capabilities: [gpu]
                            count: 1

    nb-html-en-completed:
        <<: *notebook-processor-base
        environment:
            - NATS_URL=nats://nats:4222
            - LOG_LEVEL=INFO
            - INPUT_DIR=/input
            - OUTPUT_DIR=/staging
            - STREAM_NAME=EVENTS
            - SUBJECT=event.file.*.notebooks
            - NOTEBOOK_EXTENSION=.py
            - PROG_LANG=python
            - QUEUE_GROUP=NOTEBOOK_PROCESSOR_HTML_EN_COMPLETED
            - LANGUAGES=en
            - NOTEBOOK_FORMATS=html
            - OUTPUT_TYPES=completed
        deploy:
            mode: replicated
            replicas: 1
            resources:
                reservations:
                    devices:
                        -   driver: nvidia
                            capabilities: [gpu]
                            count: 1

    nb-html-de-codealong:
        <<: *notebook-processor-base
        environment:
            - NATS_URL=nats://nats:4222
            - LOG_LEVEL=INFO
            - INPUT_DIR=/input
            - OUTPUT_DIR=/staging
            - STREAM_NAME=EVENTS
            - SUBJECT=event.file.*.notebooks
            - NOTEBOOK_EXTENSION=.py
            - PROG_LANG=python
            - QUEUE_GROUP=NOTEBOOK_PROCESSOR_HTML_DE_CODEALONG
            - LANGUAGES=de
            - NOTEBOOK_FORMATS=html
            - OUTPUT_TYPES=codealong
        deploy:
            mode: replicated
            replicas: 1
            resources:
                reservations:
                    devices:
                        -   driver: nvidia
                            capabilities: [gpu]
                            count: 1

    nb-html-en-codealong:
        <<: *notebook-processor-base
        environment:
            - NATS_URL=nats://nats:4222
            - LOG_LEVEL=INFO
            - INPUT_DIR=/input
            - OUTPUT_DIR=/staging
            - STREAM_NAME=EVENTS
            - SUBJECT=event.file.*.notebooks
            - NOTEBOOK_EXTENSION=.py
            - PROG_LANG=python
            - QUEUE_GROUP=NOTEBOOK_PROCESSOR_HTML_EN_CODEALONG
            - LANGUAGES=en
            - NOTEBOOK_FORMATS=html
            - OUTPUT_TYPES=codealong
        deploy:
            mode: replicated
            replicas: 1
            resources:
                reservations:
                    devices:
                        -   driver: nvidia
                            capabilities: [gpu]
                            count: 1

    nb-html-de-speaker:
        <<: *notebook-processor-base
        environment:
            - NATS_URL=nats://nats:4222
            - LOG_LEVEL=INFO
            - INPUT_DIR=/input
            - OUTPUT_DIR=/staging
            - STREAM_NAME=EVENTS
            - SUBJECT=event.file.*.notebooks
            - NOTEBOOK_EXTENSION=.py
            - PROG_LANG=python
            - QUEUE_GROUP=NOTEBOOK_PROCESSOR_HTML_DE_SPEAKER
            - LANGUAGES=de
            - NOTEBOOK_FORMATS=html
            - OUTPUT_TYPES=speaker
        deploy:
            mode: replicated
            replicas: 1
            resources:
                reservations:
                    devices:
                        -   driver: nvidia
                            capabilities: [gpu]
                            count: 1

    nb-html-en-speaker:
        <<: *notebook-processor-base
        environment:
            - NATS_URL=nats://nats:4222
            - LOG_LEVEL=INFO
            - INPUT_DIR=/input
            - OUTPUT_DIR=/staging
            - STREAM_NAME=EVENTS
            - SUBJECT=event.file.*.notebooks
            - NOTEBOOK_EXTENSION=.py
            - PROG_LANG=python
            - QUEUE_GROUP=NOTEBOOK_PROCESSOR_HTML_EN_SPEAKER
            - LANGUAGES=en
            - NOTEBOOK_FORMATS=html
            - OUTPUT_TYPES=speaker
        deploy:
            mode: replicated
            replicas: 1
            resources:
                reservations:
                    devices:
                        -   driver: nvidia
                            capabilities: [gpu]
                            count: 1

volumes:
    clx-db:
    clx-data:

networks:
    app-network:
        driver: bridge
